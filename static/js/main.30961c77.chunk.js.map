{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","icon","faSpinner","spin","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","default","role","aria-label","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","p","ItemContainer","Divider","Overview","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","match","push","history","includes","parsedId","parseInt","isNaN","console","log","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30961c77.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child) {\r\n        margin-bottom: 50px;\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 125px);\r\n    grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 32px;\r\n    margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n    <Container>\r\n        <FontAwesomeIcon icon={faSpinner} spin />\r\n    </Container>\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n    <Container>\r\n        <Text color={color}>{text}</Text>\r\n    </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n    height: 180px;\r\n    background-image: url(${(props) => props.bgUrl});\r\n    background-size: cover;\r\n    background-position: center center;\r\n    border-radius: 4px;\r\n    transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    position: absolute;\r\n    bottom: 5px;\r\n    right: 5px;\r\n    opacity: 0;\r\n    transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom: 5px;\r\n    position: relative;\r\n    &:hover {\r\n        ${Image} {\r\n            opacity: 0.3;\r\n        }\r\n        ${Rating} {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    display: block;\r\n    margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n    font-size: 10px;\r\n    color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require('../assets/noPosterSmall.png').default} />\r\n                <Rating>\r\n                    <span role=\"img\" aria-label=\"rating\">\r\n                        ⭐\r\n                    </span>\r\n                    {''}\r\n                    {rating}/10\r\n                </Rating>\r\n            </ImageContainer>\r\n            <Title>{title.length > 18 ? `${title.substring(0, 15)}...` : title}</Title>\r\n            <Year>{year}</Year>\r\n        </Container>\r\n    </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    imageUrl: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport Section from 'Components/Section';\r\nimport Loader from 'Components/Loader';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\r\n    <>\r\n        <Helmet>\r\n            <title>Movies | Nomflix</title>\r\n        </Helmet>\r\n        {loading ? (\r\n            <Loader />\r\n        ) : (\r\n            <Container>\r\n                <Helmet>\r\n                    <title>Movies | Nomflix</title>\r\n                </Helmet>\r\n                {nowPlaying && nowPlaying.length > 0 && (\r\n                    <Section title=\"Now Playing\">\r\n                        {nowPlaying.map((movie) => (\r\n                            <Poster\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                imageUrl={movie.poster_path}\r\n                                title={movie.original_title}\r\n                                rating={movie.vote_average}\r\n                                isMovie={true}\r\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {upcoming && upcoming.length > 0 && (\r\n                    <Section title=\"upcoming\">\r\n                        {upcoming.map((movie) => (\r\n                            <Poster\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                imageUrl={movie.poster_path}\r\n                                title={movie.original_title}\r\n                                rating={movie.vote_average}\r\n                                isMovie={true}\r\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {popular && popular.length > 0 && (\r\n                    <Section title=\"Now Playing\">\r\n                        {popular.map((movie) => (\r\n                            <Poster\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                imageUrl={movie.poster_path}\r\n                                title={movie.original_title}\r\n                                rating={movie.vote_average}\r\n                                isMovie={true}\r\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {error && <Message color=\"#e74c3c\" text={error} />}\r\n            </Container>\r\n        )}\r\n    </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying: PropTypes.array,\r\n    upcoming: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"ea24823f1c54cf5b3b163947c5be97d5\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n","import HomeContainer from './HomeContainer';\r\n\r\nexport default HomeContainer;\r\n","import React from 'react';\r\nimport HomePresenter from './HomePresenter';\r\nimport { moviesApi } from 'api';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true,\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const {\r\n                data: { results: nowPlaying },\r\n            } = await moviesApi.nowPlaying();\r\n\r\n            const {\r\n                data: { results: upcoming },\r\n            } = await moviesApi.upcoming();\r\n\r\n            const {\r\n                data: { results: popular },\r\n            } = await moviesApi.popular();\r\n\r\n            this.setState({\r\n                nowPlaying,\r\n                upcoming,\r\n                popular,\r\n            });\r\n        } catch {\r\n            this.setState({\r\n                error: 'Can`t find movies information.',\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loading: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n        return <HomePresenter nowPlaying={nowPlaying} upcoming={upcoming} popular={popular} error={error} loading={loading} />;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Section from 'Components/Section';\r\nimport Loader from 'Components/Loader';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\r\n    <>\r\n        <Helmet>\r\n            <title>TV Shows | Nomflix</title>\r\n        </Helmet>\r\n        {loading ? (\r\n            <Loader />\r\n        ) : (\r\n            <Container>\r\n                {topRated && topRated.length > 0 && (\r\n                    <Section title=\"Top Rated Shows\">\r\n                        {topRated.map((show) => (\r\n                            <Poster\r\n                                key={show.id}\r\n                                id={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {popular && popular.length > 0 && (\r\n                    <Section title=\"Popular Shows\">\r\n                        {popular.map((show) => (\r\n                            <Poster\r\n                                key={show.id}\r\n                                id={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {airingToday && airingToday.length > 0 && (\r\n                    <Section title=\"Airing Today\">\r\n                        {airingToday.map((show) => (\r\n                            <Poster\r\n                                key={show.id}\r\n                                id={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {error && <Message color=\"#e74c3c\" text={error} />}\r\n            </Container>\r\n        )}\r\n    </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n    topRated: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    airingToday: PropTypes.array,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from './TVContainer';\r\n\r\nexport default TVContainer;\r\n","import React from 'react';\r\nimport TVPresenter from './TVPresenter';\r\nimport { tvApi } from 'api';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        topRated: null,\r\n        popular: null,\r\n        airingToday: null,\r\n        error: null,\r\n        loading: true,\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const {\r\n                data: { results: topRated },\r\n            } = await tvApi.topRated();\r\n            const {\r\n                data: { results: popular },\r\n            } = await tvApi.popular();\r\n            const {\r\n                data: { results: airingToday },\r\n            } = await tvApi.airingToday();\r\n\r\n            this.setState({\r\n                topRated,\r\n                popular,\r\n                airingToday,\r\n            });\r\n        } catch {\r\n            this.setState({\r\n                error: 'Can`t find TV information.',\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loading: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { topRated, popular, airingToday, error, loading } = this.state;\r\n        return <TVPresenter topRated={topRated} popular={popular} airingToday={airingToday} error={error} loading={loading} />;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Loader from 'Components/Loader';\r\nimport Section from 'Components/Section';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom: 50px;\r\n    width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all: unset;\r\n    font-size: 28px;\r\n    width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({ movieResults, tvResults, searchTerm, error, loading, handleSubmit, updateTerm }) => (\r\n    <Container>\r\n        <Helmet>\r\n            <title>Search | Nomflix</title>\r\n        </Helmet>\r\n        <Form onSubmit={handleSubmit}>\r\n            <Input placeholder=\"Search Movies or TV Shows...\" value={searchTerm} onChange={updateTerm} />\r\n        </Form>\r\n        {loading ? (\r\n            <Loader />\r\n        ) : (\r\n            <>\r\n                {movieResults && movieResults.length > 0 && (\r\n                    <Section title=\"Movie Results\">\r\n                        {movieResults.map((movie) => (\r\n                            <Poster\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                imageUrl={movie.poster_path}\r\n                                title={movie.original_title}\r\n                                rating={movie.vote_average}\r\n                                isMovie={true}\r\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {tvResults && tvResults.length > 0 && (\r\n                    <Section title=\"TV Show Results\">\r\n                        {tvResults.map((show) => (\r\n                            <Poster\r\n                                key={show.id}\r\n                                id={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {error && <Message color=\"#e74c3c\" text={error} />}\r\n                {movieResults && tvResults && movieResults.length === 0 && tvResults.length === 0 && <Message text=\"Nothing found\" color=\"#95A5A6\" />}\r\n            </>\r\n        )}\r\n    </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults: PropTypes.array,\r\n    tvResults: PropTypes.array,\r\n    searchTerm: PropTypes.string,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from './SearchContainer';\r\n\r\nexport default SearchContainer;\r\n","import { moviesApi, tvApi } from 'api';\r\nimport React from 'react';\r\nimport SearchPresenter from './SearchPresenter';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: '',\r\n        error: null,\r\n        loading: false,\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { searchTerm } = this.state;\r\n        if (searchTerm !== '') {\r\n            this.searchByTerm();\r\n        }\r\n    };\r\n\r\n    updateTerm = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        this.setState({\r\n            searchTerm: value,\r\n        });\r\n    };\r\n\r\n    searchByTerm = async () => {\r\n        const { searchTerm } = this.state;\r\n        this.setState({ loading: true });\r\n        try {\r\n            const {\r\n                data: { results: movieResults },\r\n            } = await moviesApi.search(searchTerm);\r\n            const {\r\n                data: { results: tvResults },\r\n            } = await tvApi.search(searchTerm);\r\n\r\n            this.setState({\r\n                movieResults,\r\n                tvResults,\r\n            });\r\n        } catch {\r\n            this.setState({\r\n                error: 'Can`t find results',\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loading: false,\r\n            });\r\n        }\r\n    };\r\n    render() {\r\n        const { movieResults, tvResults, searchTerm, error, loading } = this.state;\r\n        return (\r\n            <SearchPresenter movieResults={movieResults} tvResults={tvResults} searchTerm={searchTerm} error={error} loading={loading} handleSubmit={this.handleSubmit} updateTerm={this.updateTerm} />\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.3s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">tv</SLink>\r\n      </Item>\r\n\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Loader from 'Components/Loader';\r\nimport { Helmet } from 'react-helmet';\r\nimport Message from 'Components/Message';\r\n\r\nconst Container = styled.div`\r\n    height: calc(100vh - 50px);\r\n    width: 100%;\r\n    position: relative;\r\n    padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(${(props) => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    filter: blur(3px);\r\n    opacity: 0.5;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n    width: 30%;\r\n    background-image: url(${(props) => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    width: 70%;\r\n    margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.p`\r\n    font-size: 32px;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n    margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    font-size: 12px;\r\n    opacity: 0.7;\r\n    line-height: 1.5;\r\n    width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading }) =>\r\n    loading ? (\r\n        <>\r\n            <Helmet>\r\n                <title>Loading | Nomflix</title>\r\n            </Helmet>\r\n            <Loader />\r\n        </>\r\n    ) : error ? (\r\n        <Message />\r\n    ) : (\r\n        <Container>\r\n            <Helmet>\r\n                <title>{result.original_title ? result.original_title : result.original_name} | Nomflix</title>\r\n            </Helmet>\r\n            <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\r\n            <Content>\r\n                <Cover bgImage={result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : require('../../assets/noPosterSmall.png').default} />\r\n                <Data>\r\n                    <Title>{result.original_title ? result.original_title : result.original_name}</Title>\r\n                    <ItemContainer>\r\n                        <Item>{result.release_date ? result.release_date.substring(0, 4) : result.release_date === '' ? 'no data' : result.first_air_date.substring(0, 4)}</Item>\r\n                        <Divider>●</Divider>\r\n                        <Item>{result.runtime === 0 || result.runtime ? result.runtime : result.episode_run_time[0]} min</Item>\r\n                        <Divider>●</Divider>\r\n                        <Item>{result.genres && result.genres.map((genre, index) => (index === result.genres.length - 1 ? genre.name : `${genre.name} / `))}</Item>\r\n                    </ItemContainer>\r\n                    <Overview>{result.overview}</Overview>\r\n                </Data>\r\n            </Content>\r\n        </Container>\r\n    );\r\n\r\nDetailPresenter.propTypes = {\r\n    result: PropTypes.object,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from './DetailContainer';\r\n\r\nexport default DetailContainer;\r\n","import { moviesApi, tvApi } from 'api';\r\nimport React from 'react';\r\nimport DetailPresenter from './DetailPresenter';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        result: null,\r\n        error: null,\r\n        loading: true,\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const {\r\n            match: {\r\n                params: { id },\r\n            },\r\n            history: { push },\r\n            location: { pathname },\r\n        } = this.props;\r\n\r\n        this.isMovie = pathname.includes('/movie/');\r\n\r\n        const parsedId = parseInt(id);\r\n        if (isNaN(parsedId)) {\r\n            return push('/');\r\n        }\r\n        let result = null;\r\n        try {\r\n            if (this.isMovie) {\r\n                ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n            } else {\r\n                ({ data: result } = await tvApi.showDetail(parsedId));\r\n            }\r\n        } catch {\r\n            this.setState({ error: 'Can`t find anything' });\r\n        } finally {\r\n            this.setState({ loading: false, result });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { result, error, loading } = this.state;\r\n        console.log(this.state);\r\n        return <DetailPresenter result={result} error={error} loading={loading} />;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\r\nimport Home from 'Routes/Home';\r\nimport TV from 'Routes/TV';\r\nimport Search from 'Routes/Search';\r\nimport Header from 'Components/Header';\r\nimport Detail from 'Routes/Detail';\r\n\r\nexport default () => (\r\n    <Router>\r\n        <>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/tv\" component={TV} />\r\n                <Route path=\"/search\" component={Search} />\r\n                <Route path=\"/movie/:id\" component={Detail} />\r\n                <Route path=\"/show/:id\" component={Detail} />\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </Switch>\r\n        </>\r\n    </Router>\r\n);\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a {\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    body {\r\n        font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size: 12px;\r\n        background-color: rgba(20, 20, 20, 1);\r\n        color: white;\r\n        padding-top: 50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\r\nimport Router from \"Components/Router\";\r\nimport GlobalStyles from \"Components/GlobalStyles\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Router />\r\n        <GlobalStyles />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}